on:
  push:
    branches:
      - master
      - release*

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Build, tag, and push image to Docker Hub
        uses: elgohr/Publish-Docker-Github-Action@2.14
        id: build-image
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_REPOSITORY: hwasurr-dot-io
          IMAGE_TAG: ${{ github.sha }}
        with:
          name: $DOCKER_USER/$DOCKER_REPOSITORY
          username: DOCKER_USER
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,$IMAGE_TAG"
        run: |
          echo "::set-output name=image::$DOCKER_USER/$DOCKER_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: hwasurr-dot-io
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ secrets.ECS_SERVICE_NAME }}
          cluster: ${{ secrets.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
